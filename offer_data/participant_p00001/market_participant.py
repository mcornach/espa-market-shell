import argparseimport jsondef compute_offer(times, resources):    """Makes a default offer with all the necessary keys"""    offer_keys = ['cost_rgu', 'cost_rgd', 'cost_spr', 'cost_nsp', 'block_ch_mc', 'block_dc_mc',                   'block_soc_mc', 'block_ch_mq', 'block_dc_mq', 'block_soc_mq', 'soc_end',                   'bid_soc', 'init_en', 'init_status', 'ramp_up', 'ramp_dn', 'socmax', 'socmin',                  'soc_begin', 'eff_ch', 'eff_dc', 'chmax', 'dcmax']    offer_vals = [3, 3, 0, 0, [21, 18], [27, 34], [36, 20], [20, 16], [20, 16], [80, 56.8], 28.8,                  False, 0, 0, 9999, 9999, 136.8, 28.8, 136.8, 0.9, 1, 36, 36]    use_time = [True, True, True, True, True, True, True, True, True, True, False, False, False,                False, False, False, False, False, False, False, False, True, True]    offer_out = {}    for rid in resources:        resource_offer = {}        for i, key in enumerate(offer_keys):            if use_time[i]:                time_dict = {}                for t in times:                    time_dict[t] = offer_vals[i]            else:                time_dict = offer_vals[i]            resource_offer[key] = time_dict        offer_out[rid] = resource_offer    return offer_outparser = argparse.ArgumentParser(prog='market_participant',                                 description='Submits a placeholder offer')parser.add_argument('time_step', type=int, help='Integer time step tracking the progress of the\                    simulated market.')parser.add_argument('market_info', help='json formatted dictionary with market information.')parser.add_argument('resource_info', help='json formatted dictionary with resource information.')args = parser.parse_args()mi = json.loads(args.market_info)ri = json.loads(args.resource_info)times = [k for k in mi['intervals'].keys()]resources = [r for r in ri['status'].keys()]offer_out = compute_offer(times, resources)with open(f'offer_{args.time_step}.json', 'w') as f:    json.dump(offer_out, f, indent=4)